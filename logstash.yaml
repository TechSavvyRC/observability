##==================================================================================##
##                        Logstash Deployment Manifest (K8s)                        ##
##                                                                                  ##
## Purpose:                                                                         ##
## --------                                                                         ##
## Deploys Logstash within the Kubernetes 'observability' namespace, configured to  ##
## securely send data to the Elasticsearch cluster using TLS encryption and basic   ##
## authentication.                                                                  ##
##                                                                                  ##
## Key Configurations:                                                              ##
## ------------------                                                              ##
## - **Kafka Integration:** Ingests data from the 'ecom_transactions' Kafka topic.  ##
## - **Beats Integration:** Collects data from Beats agents running in different    ##
##   namespaces and pods.                                                           ##
## - **Elasticsearch Integration:** Secure communication with Elasticsearch using   ##
##   certificates and credentials from Kubernetes Secrets.                         ##
## - **TLS Security:** Ensures data encryption in transit.                         ##
##==================================================================================##

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline-config
  namespace: observability

data:
  pipelines.yml: |
    - pipeline.id: kafka_pipeline
      path.config: "/usr/share/logstash/pipeline/kafka.conf"
    - pipeline.id: disable_main
      pipeline.workers: 0

  kafka.conf: |
    input {
      kafka {
        bootstrap_servers => "kafka.streaming.svc.cluster.local:9092"
        topics => ["ecom_transactions"]
        auto_offset_reset => "earliest"
        consumer_threads => 3
      }
    }

    output {
      elasticsearch {
        hosts => ["https://es-master.observability.svc.cluster.local:9200"]
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        cacert => "/usr/share/logstash/config/certs/ca.crt"
        index => "kafka-transactions-%{+YYYY.MM.dd}"
        ssl => true
        ssl_certificate_verification => true
      }
    }

  logstash.yml: |
    api.http.host: "0.0.0.0"
    xpack.monitoring.enabled: true
    xpack.monitoring.elasticsearch:
      hosts: ["https://es-master.observability.svc.cluster.local:9200"]
      username: "${ELASTIC_USERNAME}"
      password: "${ELASTIC_PASSWORD}"
      ssl:
        certificate_authority: "/usr/share/logstash/config/certs/ca.crt"
        verification_mode: "certificate"
    pipeline.ordered: false
    pipeline.ecs_compatibility: disabled
    pipeline.id: ""
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.17.1
        ports:
        - containerPort: 5044
        - containerPort: 9600 # Logstash monitoring API
        env:
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: username
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        volumeMounts:
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline
        - name: elasticsearch-certs
          mountPath: /usr/share/logstash/config/certs
          readOnly: true
        - name: logstash-config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
      volumes:
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline-config
      - name: elasticsearch-certs
        secret:
          secretName: elasticsearch-certs
      - name: logstash-config
        configMap:
          name: logstash-pipeline-config
---

apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: observability
spec:
  ports:
  - name: beats
    port: 5044
    targetPort: 5044
  - name: monitoring
    port: 9600
    targetPort: 9600
  selector:
    app: logstash
