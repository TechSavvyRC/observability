##==================================================================================##
##                         Elasticsearch Certificates Secret                        ##
##                                                                                  ##
## Purpose:                                                                         ##
## --------                                                                         ##
## This Secret stores TLS certificate data (CA, certificate, and private key)       ##
## required for securing Elasticsearch communications via HTTPS.                    ##
##                                                                                  ##
## Usage:                                                                           ##
## ------                                                                           ##
## - The Secret is of type 'kubernetes.io/tls' and is referenced by other resources ##
##   to enable encrypted connections.                                               ##
##==================================================================================##

apiVersion: v1
kind: Secret
metadata:
  # Name of the Secret for Elasticsearch certificates.
  name: elasticsearch-certs
  # Namespace in which the Secret is created.
  namespace: observability
type: kubernetes.io/tls  # Specifies that this Secret contains TLS data.
data:
  # CA certificate in base64 encoded format.
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0ekNDQXArZ0F3SUJBZ0lVRjRVNjI2aTJKUEk2VnpJMGtvS29yWk1yOG8wd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2F6RUxNQWtHQTFVRUJoTUNTVTR4RERBS0JnTlZCQWdNQTFSRlRERU1NQW9HQTFVRUJ3d0RTRmxFTVJNdwpFUVlEVlFRS0RBcFVaV05vVTJGNWVWSkRNUXN3Q1FZRFZRUUxEQUpKVkRFZU1Cd0dBMVVFQXd3VlpXeGhjM1JwClkzTmxZWEpqYUMxamJIVnpkR1Z5TUI0WERUSTFNREl3TXpFME16TXpNRm9YRFRNd01ESXdNakUwTXpNek1Gb3cKYXpFTE1Ba0dBMVVFQmhNQ1NVNHhEREFLQmdOVkJBZ01BMVJGVERFTU1Bb0dBMVVFQnd3RFNGbEVNUk13RVFZRApWUVFLREFwVVpXTm9VMkY1ZVZKRE1Rc3dDUVlEVlFRTERBSkpWREVlTUJ3R0ExVUVBd3dWWld4aGMzUnBZM05sCllYSmphQzFqYkhWemRHVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWxQTUgKVlRPcmpuSG9idzBOU01UYTFxaDRJMkd0SWNTOFNaMTl3VlA2U040VHp5NDJyM1FkZ2gvUXRpSUNHbGgrVndBNwpWUU1mOXZiNi9RazFzSUg3WU1GajUzWk05L2xjYi9JdFE5NVR6WVZHMlFkak5FS2wzNENvZktwc2laZHQ0YjZUCjA5dUQyUytrLzlydUxQZWt1WjhPMWxyYU1iRTh6OUdFWHNSMVR2SU1IR0FUYzVCc2poSlNTOEJoUmwzdVJPT00KWEcwMHdpVzgrWmEwVXZVVE1ISGVxMk1zd1lJWmQyY1ppanRWTmljNFlMcm8wMGk0c3VkRlBQZnB2UkhtbVBzbQo3aHJxRDdwL1dmMUpra2JLWlVXVjJaYTJ6L2FXNktnRzNhTmxuTUEzbCtNVFd5SVZBMHRYbHhQRHY1ejNjeERCCkNaOCtzL3hoNUdqRWR3UEkyd0lEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVODUra0g5d3ZXL3NYdDRwMFMza2EKQW1kUERQRXdId1lEVlIwakJCZ3dGb0FVODUra0g5d3ZXL3NYdDRwMFMza2FBbWRQRFBFd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlQnE2eXRTUkhXVGpKdktzZFF3S25DQ0FuZHBGCjN1V3hrTnptRW5BRzNkbWNKbncxeDVDcUc5MXZxd0FjNUtCaHl5YUVUV1ZXWndJUG9sQmVCTlNKa2d6VTJ1bkIKYkwwV3dPOWF6b2EvRHhGbXZaamVzbEFON2JQWkt4VVZHSlVlSE52WXBIN1JQTUpjRm50THZXYkdTcGtjUlZPTgpaNUxwaWpObGpKclhXcWIvK092YlA2NzRkRHdxK2ljdDRsaXk5dEYwTHdobC83VXNIQ1Y3OVVwWHJDeUg5SGdHCjU5MzUzSGg4VkJDYStBbmcwOGdsQWFVTjlrYTA5dkZYWUgxZ0VnS2s4L0FmV1JaQnNKUlVpS0dWSC81d291Rm0KSDFYdHB2S2U2bTl1eU5yaFRaQURrMWFZR1BZVzJkbWptWkltTnRtamhBemg5TDAvUml4Wk15Y0orUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

  # TLS certificate in base64 encoded format.
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUczekNDQmNlZ0F3SUJBZ0lVZFVVaUlXLzlHUTAycWdVL3g3VUJxUmFiQVAwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2F6RUxNQWtHQTFVRUJoTUNTVTR4RERBS0JnTlZCQWdNQTFSRlRERU1NQW9HQTFVRUJ3d0RTRmxFTVJNdwpFUVlEVlFRS0RBcFVaV05vVTJGNWVWSkRNUXN3Q1FZRFZRUUxEQUpKVkRFZU1Cd0dBMVVFQXd3VlpXeGhjM1JwClkzTmxZWEpqYUMxamJIVnpkR1Z5TUI0WERUSTFNREl3TXpFME16UXdORm9YRFRNd01ESXdNakUwTXpRd05Gb3cKYXpFTE1Ba0dBMVVFQmhNQ1NVNHhEREFLQmdOVkJBZ01BMVJGVERFTU1Bb0dBMVVFQnd3RFNGbEVNUk13RVFZRApWUVFLREFwVVpXTm9VMkY1ZVZKRE1Rc3dDUVlEVlFRTERBSkpWREVlTUJ3R0ExVUVBd3dWWld4aGMzUnBZM05sCllYSmphQzFqYkhWemRHVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZ5NlQKaGdqUk5PZXpMTGFOd24yUE1rVWVkeGJBMHpnaDNCbWJiNXFIYkd0UTZjcWJRV1hBNVBjNVhjREVWbm80UWNpOQphdm5XRGwwQ1RkQU1qQm1UcWpvSjhKL0hqeENvTjE2VU9hU1pVRXVWZWVqdUZOdU81cXpiN2hGbHlRdXJDd3o1Ci83YlpUV1VFUWJqT1UrNlEwbUVxWE03cm1lZVYyTDZnM3hIaW1USFI3dkJHRHhsRnVQN1MrMTdYR0J5QzN4em0KR3R3bzhJc29QQWJLNS9oRWFNczJySlEvdisybWFvMGVPY3g2NGI5SjdXallTNjZnRFhkUEhpbDRGQjRiaGk1Wgp5cEFwb3Y5YWFyOVYvQWtjVDl5TWZQU2FzbW9yb3VlVytmblA0NWR4R2ZhTFJKRDQ1d3c0R0ZqMVBySU1yMGhwCmJOeHQxSXYrb28rRUZobE8wUUlEQVFBQm80SURlVENDQTNVd0NRWURWUjBUQkFJd0FEQUxCZ05WSFE4RUJBTUMKQmVBd2dnTVpCZ05WSFJFRWdnTVFNSUlERElJK1pYTXRiV0Z6ZEdWeUxUQXVaWE10YldGemRHVnlMV2hsWVdScwpaWE56TG05aWMyVnlkbUZpYVd4cGRIa3VjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNQbVZ6TFcxaGMzUmxjaTB4CkxtVnpMVzFoYzNSbGNpMW9aV0ZrYkdWemN5NXZZbk5sY25aaFltbHNhWFI1TG5OMll5NWpiSFZ6ZEdWeUxteHYKWTJGc2dqNWxjeTF0WVhOMFpYSXRNaTVsY3kxdFlYTjBaWEl0YUdWaFpHeGxjM011YjJKelpYSjJZV0pwYkdsMAplUzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSUl5WlhNdGJXRnpkR1Z5TFdobFlXUnNaWE56TG05aWMyVnlkbUZpCmFXeHBkSGt1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDS1dWekxXMWhjM1JsY2k1dlluTmxjblpoWW1sc2FYUjUKTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2pwbGN5MWtZWFJoTFRBdVpYTXRaR0YwWVMxb1pXRmtiR1Z6Y3k1dgpZbk5sY25aaFltbHNhWFI1TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2pwbGN5MWtZWFJoTFRFdVpYTXRaR0YwCllTMW9aV0ZrYkdWemN5NXZZbk5sY25aaFltbHNhWFI1TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2pCbGN5MWsKWVhSaExXaGxZV1JzWlhOekxtOWljMlZ5ZG1GaWFXeHBkSGt1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDSjJWegpMV1JoZEdFdWIySnpaWEoyWVdKcGJHbDBlUzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSUkrWlhNdFkyeHBaVzUwCkxUQXVaWE10WTJ4cFpXNTBMV2hsWVdSc1pYTnpMbTlpYzJWeWRtRmlhV3hwZEhrdWMzWmpMbU5zZFhOMFpYSXUKYkc5allXeUNQbVZ6TFdOc2FXVnVkQzB4TG1WekxXTnNhV1Z1ZEMxb1pXRmtiR1Z6Y3k1dlluTmxjblpoWW1scwphWFI1TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2pKbGN5MWpiR2xsYm5RdGFHVmhaR3hsYzNNdWIySnpaWEoyCllXSnBiR2wwZVM1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJcFpYTXRZMnhwWlc1MExtOWljMlZ5ZG1GaWFXeHAKZEhrdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0ptdHBZbUZ1WVM1dlluTmxjblpoWW1sc2FYUjVMbk4yWXk1agpiSFZ6ZEdWeUxteHZZMkZzZ2hGcmFXSmhibUV1YldGeWRtVnNMbU52YlRBZEJnTlZIUTRFRmdRVWhPMEg1WmhECkdUNHB6S1FmdnpEQW04ZHpOSFV3SHdZRFZSMGpCQmd3Rm9BVTg1K2tIOXd2Vy9zWHQ0cDBTM2thQW1kUERQRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUcvYngzUExrVHQwelp2alp3TTVFWGZVRlg0YjR2MndqY0VkK0pZSApVTDhBZ1NvNUZ5Skx0V1ViaDFWZExKb3Nhb3VidDUrWWJra01udnBNZFdwRUxaekppZUUybWtkaHVqaGZySnowCjB0YWNmK3dQTGYyRDFDVURPam9HNW1WaER1b3krY3lOa2RNK1N2L0J1RFUwOVA4NlV0VjN5aGlRK1lkQnUwZVAKWkJ6VlFYQ0p3Qk1IVmxqMDlPRm50ME9OckZJNGhKMS95SWk4RS8zUDlmZXY2TGx5ZkJITVZBdXp4NTRjU2ZjegowWXlRWHZjZFh3K0hSTDhzN2plUGNwYURJK2k4ZjBTREpualZxbXhXVzZXQUk0MVBmQzBNcUhNWENBbSs4UFE4CmQzdFE5Q3BxOWN2UHVWOXJUR3RkblZGSy9ZUjZjMjdsU1picG9SRng5Q21CUXNFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

  # TLS private key in base64 encoded format.
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHJMcE9HQ05FMDU3TXMKdG8zQ2ZZOHlSUjUzRnNEVE9DSGNHWnR2bW9kc2ExRHB5cHRCWmNEazl6bGR3TVJXZWpoQnlMMXErZFlPWFFKTgowQXlNR1pPcU9nbnduOGVQRUtnM1hwUTVwSmxRUzVWNTZPNFUyNDdtck52dUVXWEpDNnNMRFBuL3R0bE5aUVJCCnVNNVQ3cERTWVNwY3p1dVo1NVhZdnFEZkVlS1pNZEh1OEVZUEdVVzQvdEw3WHRjWUhJTGZIT1lhM0Nqd2l5ZzgKQnNybitFUm95emFzbEQrLzdhWnFqUjQ1ekhyaHYwbnRhTmhMcnFBTmQwOGVLWGdVSGh1R0xsbktrQ21pLzFwcQp2MVg4Q1J4UDNJeDg5SnF5YWl1aTU1YjUrYy9qbDNFWjlvdEVrUGpuRERnWVdQVStzZ3l2U0dsczNHM1VpLzZpCmo0UVdHVTdSQWdNQkFBRUNnZ0VBYTBsWElUa2FmeUVIK3VqWXFKWHc0a1RuemZvQ1F4a0RVVTRaTzROcUxncVMKNGVSOGlRdnJRRWlMMGZvalZ6UHdRQXBjWnRYTVVjY2FTdmNURWtLRXU0NDRoSjNQUXJPZG1ZeTYzOFQzNzhwYgpTVDc2aFdkWHZHRzAvdGpPN3pVMGRSa1pYdzlCK0cyUjBJMkhDb0QxYmhQSGFJazRyNEFYT3NaVHl3OTBxTjlTClluWXZtdCtocXhxZ0lJSG5PTFp0YUswanV4ZzloeC80QjhodGdwZFBLR3VORlN5UzVvdzIxOGcvcUhTdGx3eU0KbDNSaWZlYWZNMVVlOVJSL05EeS8rd3FKM1FndGhOT29aNzNHaW90VFZna3RSU01FSjI0THJLUmlOM0ViNy9zbApzNkttQXRFVXVETUU3THhnNlE2d2hLU1dLcytGd1plSitJRWhIaEQ2VlFLQmdRRDlVTDBKQlVHMlV5Vk5icXJBCk53WlhGM3lqK0VKTHhValhQR0NCSE9Wc0NZM3Y3amlIQTJFdlk2MzMwQy9LS1M1dmc3VGtLODFhZzVvaFcrREgKMTVuaDRFeXByNWpLaGpFc1M1UWZMQVc4MDlpOENFcitTWmUrcUx2ckE3czladVo0YWZ0Ykc0WFVpM2ZCbnZaUgpYVEJ3K0tHYjlBRTFxakVYS2NVZkRzR1ZNd0tCZ1FEdHJLUDk3anZYbkJEL1pXcmF5ZzVOQXNmK2x4OTRzd2FGCmdlYmtQVFV6ZHZYck5kaDRyNjJNU2NOUlFTSVd0c2laZ2VKaGxvcVU2Q21mMUhWdlVPZWVtSWNoR0NHMW80NDcKVUVIazlXcVVvNGNMU1oyQU16TlA1cDhTcC83UnhnRXl5WlN0bWJHc2k2dWtHMmdma3dwejhmKzhuZ00relBORgo3MzZ4M0VORDZ3S0JnRWQrdnl2Sm1RZGRwanlaaklYZHdlTlkxS3Z1eUw5YitqZ05hV3RuZlhVbHFUTGJ1SWFhCnRKWk1ldkJqaU9sMUFBOG5UQ25PRnhLQjdFR1lEZlE1Yk13c28xYU5JZ0dmS0VmSk9SQW5PNk5VNDJvR3FTdm0KRjNjUFpxSnBGaks1VlRrTktJMUpVbGR2MmFnRE5xQTJQaExVaWNCYmVPL3RqaGRzaVo4L2FmR3pBb0dCQU14VApEOFNjeTF0bmN3RnRHYml2M2kxOGg1eXFKTWNwK1NCTGRjaWZpaDROVmdyNGhubnlaWnRtU29DUEl4UXQzVFNECkFiQnRzQU9sdHlzTmhrdkZYT251TExWWnZwa2QyNGZJVG0zY1FkMDQzRDdxOFhrbUN5WFVtTXA4SEVnUkZqU28KTWFZd3JCc3ZFOGNJUExKd1FaczkzMkl5NFkxYXVvVlVDREkxcnFvekFvR0JBS0NJSDBRU0swYVUxSTU4dm1oRQphbWpFRXEvbGloUU1nRXdJVHFLR3phRXZFbFFkM3ozdEtTQnY3OGJua0t5aTN5eGUxeWVFbCtFOWZnR1VxSFFMCnhoSWpLZVF3RFRjOHB2cDVkL3dtdHZKdDZ1ZTd1SWVwc0lVcThFa2NvRnhYMlVYSVZsZTRRMUFoN1dpaXl0NlAKbk1jejNJZEFQOWp2UGlaTEVVVXAvQitRCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

---

##====================================================================================##
##                          Elasticsearch Credentials Secret                          ##
##                                                                                    ##
## Purpose:                                                                           ##
## --------                                                                           ##
## This Secret holds the credentials (username and password) required to authenticate ##
## with Elasticsearch.                                                                ##
##                                                                                    ##
## Usage:                                                                             ##
## ------                                                                             ##
## - The Secret is referenced by deployments or jobs that need to connect to          ##
##   Elasticsearch securely.                                                          ##
##====================================================================================##

apiVersion: v1
kind: Secret
metadata:
  # Name of the Secret for Elasticsearch credentials.
  name: elasticsearch-credentials
  # Namespace where the Secret is created.
  namespace: observability

# A generic secret type used for storing non-TLS credentials.
type: Opaque

data:
  # Base64 encoded Elasticsearch username.
  username: ZWxhc3RpYw==
  # Base64 encoded Elasticsearch password.
  password: bjN0YzAwbA==

---

##===============================================================================##
##                        Kibana System Credentials Secret                       ##
##                                                                               ##
## Purpose:                                                                      ##
## --------                                                                      ##
## This Secret stores the credentials for the built-in Kibana system user.       ##
## It is used by Kibana to securely connect to Elasticsearch.                    ##
##                                                                               ##
## Usage:                                                                        ##
## ------                                                                        ##
## - The credentials are referenced by the Kibana deployment to authenticate its ##
##   connection to Elasticsearch.                                                ##
##===============================================================================##

apiVersion: v1
kind: Secret
metadata:
  # Name of the Secret for Kibana system credentials.
  name: kibana-system-credentials
  # Namespace where the Secret is created.
  namespace: observability

# A generic secret type used for storing non-TLS credentials.
type: Opaque

data:
  # Base64 encoded username for the Kibana system user.
  username: a2liYW5hX3N5c3RlbQ==
  # Base64 encoded password for the Kibana system user.
  password: bjN0YzAwbA==
